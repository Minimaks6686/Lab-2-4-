// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RailwayStation;

#nullable disable

namespace RailwayStation.Migrations
{
    [DbContext(typeof(RailwayStationContext))]
    partial class RailwayStationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RailwayStation.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Car_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Seat_amount")
                        .HasColumnType("int");

                    b.Property<int>("Seat_occupied")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("RailwayStation.Models.Passenger", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Last_name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Personal_document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name", "Last_name");

                    b.ToTable("Passenger", t =>
                        {
                            t.HasCheckConstraint("Age", "Age > 1 AND Age < 120");
                        });
                });

            modelBuilder.Entity("RailwayStation.Models.Railway_Journey_Car", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("Railway_JourneyId")
                        .HasColumnType("int");

                    b.HasKey("CarId", "Railway_JourneyId");

                    b.HasIndex("Railway_JourneyId");

                    b.ToTable("Railway_Journey_Car", (string)null);
                });

            modelBuilder.Entity("RailwayStation.Models.Railway_journey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Railway_journey_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Car_amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Destination_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start_point_date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Railway_journey");
                });

            modelBuilder.Entity("RailwayStation.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Route_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.HasIndex("TrainId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("RailwayStation.Models.Station", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Passenger_amount")
                        .HasColumnType("int");

                    b.Property<string>("Station_name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("Worker_amount")
                        .HasColumnType("int");

                    b.HasKey("Address");

                    b.HasAlternateKey("Station_name");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Address = "м. Київ, Вацлава Гавела 4",
                            Passengeramount = 0,
                            Stationname = "Західна",
                            Workeramount = 0
                        },
                        new
                        {
                            Address = "м. Київ, Вацлава Гавела 5",
                            Passengeramount = 0,
                            Stationname = "Східна",
                            Workeramount = 0
                        },
                        new
                        {
                            Address = "м. Київ, Вацлава Гавела 6",
                            Passengeramount = 0,
                            Stationname = "Північна",
                            Workeramount = 0
                        });
                });

            modelBuilder.Entity("RailwayStation.Models.Train", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Train_id");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<int>("Railway_JourneyId")
                        .HasColumnType("int");

                    b.Property<string>("StationFromId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StationToId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Railway_JourneyId");

                    b.HasIndex("StationFromId");

                    b.HasIndex("StationToId");

                    b.ToTable("Train");
                });

            modelBuilder.Entity("RailwayStation.Models.Waybil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Waybil_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Car_number")
                        .HasColumnType("int");

                    b.Property<string>("Car_type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PassengerLastName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PassengerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Seat_number")
                        .HasColumnType("int");

                    b.Property<string>("StationFromId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StationToId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Train_number")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("StationFromId");

                    b.HasIndex("StationToId");

                    b.HasIndex("PassengerName", "PassengerLastName");

                    b.ToTable("Waybils");
                });

            modelBuilder.Entity("RailwayStation.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Worker_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("StationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name", "Last_name");

                    b.HasIndex("StationAddress");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("RailwayStation.Models.Railway_Journey_Car", b =>
                {
                    b.HasOne("RailwayStation.Models.Car", "Car")
                        .WithMany("Railway_Journeys_Cars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RailwayStation.Models.Railway_journey", "Railway_Journey")
                        .WithMany("Railway_Journeys_Cars")
                        .HasForeignKey("Railway_JourneyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Railway_Journey");
                });

            modelBuilder.Entity("RailwayStation.Models.Route", b =>
                {
                    b.HasOne("RailwayStation.Models.Station", "Station")
                        .WithMany("Routes")
                        .HasForeignKey("StationId");

                    b.HasOne("RailwayStation.Models.Train", "Train")
                        .WithMany("Routes")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("RailwayStation.Models.Train", b =>
                {
                    b.HasOne("RailwayStation.Models.Railway_journey", "Railway_Journey")
                        .WithMany("Trains")
                        .HasForeignKey("Railway_JourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RailwayStation.Models.Station", "Start_point")
                        .WithMany("TrainsFrom")
                        .HasForeignKey("StationFromId");

                    b.HasOne("RailwayStation.Models.Station", "Destination")
                        .WithMany("TrainsTo")
                        .HasForeignKey("StationToId");

                    b.Navigation("Destination");

                    b.Navigation("Railway_Journey");

                    b.Navigation("Start_point");
                });

            modelBuilder.Entity("RailwayStation.Models.Waybil", b =>
                {
                    b.HasOne("RailwayStation.Models.Station", "Personal_start_point")
                        .WithMany("WaybilsFrom")
                        .HasForeignKey("StationFromId");

                    b.HasOne("RailwayStation.Models.Station", "Personal_destination")
                        .WithMany("WaybilsTo")
                        .HasForeignKey("StationToId");

                    b.HasOne("RailwayStation.Models.Passenger", "Passenger")
                        .WithMany("Waybils")
                        .HasForeignKey("PassengerName", "PassengerLastName");

                    b.Navigation("Passenger");

                    b.Navigation("Personal_destination");

                    b.Navigation("Personal_start_point");
                });

            modelBuilder.Entity("RailwayStation.Models.Worker", b =>
                {
                    b.HasOne("RailwayStation.Models.Station", "Station")
                        .WithMany("Workers")
                        .HasForeignKey("StationAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("RailwayStation.Models.Car", b =>
                {
                    b.Navigation("Railway_Journeys_Cars");
                });

            modelBuilder.Entity("RailwayStation.Models.Passenger", b =>
                {
                    b.Navigation("Waybils");
                });

            modelBuilder.Entity("RailwayStation.Models.Railway_journey", b =>
                {
                    b.Navigation("Railway_Journeys_Cars");

                    b.Navigation("Trains");
                });

            modelBuilder.Entity("RailwayStation.Models.Station", b =>
                {
                    b.Navigation("Routes");

                    b.Navigation("TrainsFrom");

                    b.Navigation("TrainsTo");

                    b.Navigation("WaybilsFrom");

                    b.Navigation("WaybilsTo");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("RailwayStation.Models.Train", b =>
                {
                    b.Navigation("Routes");
                });
#pragma warning restore 612, 618
        }
    }
}
